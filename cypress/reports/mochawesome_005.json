{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2022-12-15T22:55:25.896Z",
    "end": "2022-12-15T22:55:31.895Z",
    "duration": 5999,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "dfa2b26b-2ce3-4eeb-968c-d3feae101bd6",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\filter-and-sort.cy.js",
      "file": "cypress\\e2e\\spec\\filter-and-sort.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "75ec1585-c56d-4758-978e-9cfa126c4cbb",
          "title": "Filter and sort products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sort from A to Z",
              "fullTitle": "Filter and sort products should sort from A to Z",
              "timedOut": null,
              "duration": 5915,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.sortSelect).select('aToZ');\nconst qualityProducts = ['Quality Stylish Shoes', 'Dell Laptop', 'Gray Couch', 'HP Laptop', 'Mackbook Pro', 'Quality Blue Shoes', 'Quality Cargo Pants', 'Quality Fitted Hat', 'Quality Heal Shoes', 'Quality Hooded Sweatshirt', 'Quality Jeans Pants', 'Quality Kids Tshirt', 'Quality Trucker Hat', 'Quality Mousepad', 'Quality Mug', 'Quality Pillow', 'Quality Pink Pants', 'Red Couch', 'Quality Sweatshirt', 'Quality Tshirt', 'Quality Vneck', 'White Couch'];\nqualityProducts.sort();\ncy.wait(5000);\ncy.get(_sort.default.productNames).each(($elem, index) => {\n  expect($elem.text()).equal(qualityProducts[index]);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[type=email]`, but never found it.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Filter and sort products`",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[type=email]`, but never found it.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Filter and sort products`\n    at Authenthication.login (webpack:///./cypress/e2e/page/auth.js:34:11)\n    at Context.eval (webpack:///./cypress/e2e/spec/filter-and-sort.cy.js:8:13)",
                "diff": null
              },
              "uuid": "af26d219-f4d2-4384-90c6-5e2827d111e1",
              "parentUUID": "75ec1585-c56d-4758-978e-9cfa126c4cbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort from Z to A",
              "fullTitle": "Filter and sort products should sort from Z to A",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.sortSelect).select('zToA');\nconst qualityProducts = ['Dell Laptop', 'Gray Couch', 'HP Laptop', 'Mackbook Pro', 'Quality Blue Shoes', 'Quality Cargo Pants', 'Quality Fitted Hat', 'Quality Heal Shoes', 'Quality Hooded Sweatshirt', 'Quality Jeans Pants', 'Quality Kids Tshirt', 'Quality Mousepad', 'Quality Mug', 'Quality Pillow', 'Quality Pink Pants', 'Quality Stylish Shoes', 'Quality Sweatshirt', 'Quality Trucker Hat', 'Quality Tshirt', 'Quality Vneck', 'Red Couch', 'White Couch'];\nqualityProducts.sort().reverse();\ncy.wait(5000);\ncy.get(_sort.default.productNames).each(($elem, index) => {\n  expect($elem.text()).equal(qualityProducts[index]);\n});",
              "err": {},
              "uuid": "da8a1459-1317-4e3e-842c-bf8fdfd8c903",
              "parentUUID": "75ec1585-c56d-4758-978e-9cfa126c4cbb",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should filter by category",
              "fullTitle": "Filter and sort products should filter by category",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.categorySelect).select('laptop'); // selects the laptop option in the category field\nconst laptops = [\"Mackbook Pro\", \"Dell Laptop\", \"HP Laptop\"];\ncy.wait(5000);\ncy.get(_sort.default.productNames).each(($elem, index) => {\n  expect($elem.text()).equal(laptops[index]);\n});",
              "err": {},
              "uuid": "1e4e70b4-39ea-4a31-9087-86bdb95c52db",
              "parentUUID": "75ec1585-c56d-4758-978e-9cfa126c4cbb",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "af26d219-f4d2-4384-90c6-5e2827d111e1"
          ],
          "pending": [],
          "skipped": [
            "da8a1459-1317-4e3e-842c-bf8fdfd8c903",
            "1e4e70b4-39ea-4a31-9087-86bdb95c52db"
          ],
          "duration": 5915,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}