{
  "stats": {
    "suites": 9,
    "tests": 32,
    "passes": 21,
    "pending": 0,
    "failures": 11,
    "start": "2022-12-16T02:31:35.289Z",
    "end": "2022-12-16T02:47:07.345Z",
    "duration": 805308,
    "testsRegistered": 32,
    "passPercent": 65.625,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "13bf27f6-1de8-4dce-9b9a-fd8e961e201f",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\authentication.cy.js",
      "file": "cypress\\e2e\\spec\\authentication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2446eec3-1420-434a-a687-a4dea3982b61",
          "title": "Authenthication",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create an account for the application",
              "fullTitle": "Authenthication should create an account for the application",
              "timedOut": null,
              "duration": 20824,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.signUp('lain@mail.com', 'P@$$w0rd!'); // registering a new account",
              "err": {},
              "uuid": "760f4358-882e-4a99-b18b-b83e4bc7ec4f",
              "parentUUID": "2446eec3-1420-434a-a687-a4dea3982b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not login with incorrect password",
              "fullTitle": "Authenthication should not login with incorrect password",
              "timedOut": null,
              "duration": 6844,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.tryLogin(\"ellen@mail.com\", \"P@$$w0rd\"); // attempts to login with an incorrect password\n\ncy.get(_auth.default.errorMessage).should('have.text', 'Wrong email or password.'); // asserts that the user is prompted with an error message",
              "err": {},
              "uuid": "116ca7d7-ba8c-475f-8905-ef7a96a2f99f",
              "parentUUID": "2446eec3-1420-434a-a687-a4dea3982b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not login with incorrect email",
              "fullTitle": "Authenthication should not login with incorrect email",
              "timedOut": null,
              "duration": 6105,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.tryLogin(\"ell77en@mail.com\", \"P@$$w0rd!\"); // attempts to login with an incorrect email \n\ncy.get(_auth.default.errorMessage).should('have.text', 'Wrong email or password.'); // asserts that the user is prompted with an error message",
              "err": {},
              "uuid": "b599a9fd-5d4b-4a30-b0dc-af912cee7ece",
              "parentUUID": "2446eec3-1420-434a-a687-a4dea3982b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not login with invalid email",
              "fullTitle": "Authenthication should not login with invalid email",
              "timedOut": null,
              "duration": 6935,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.tryLogin(\"e7en@mail\", \"P@$$w0rd!\"); //attempts to login with an invalid email\n\ncy.get(_auth.default.invalidCredError).should('have.text', 'Email is invalid'); // asserts that the user is prompted with an error message",
              "err": {},
              "uuid": "ab73d61c-dca9-45b5-81fc-49f9068f00cb",
              "parentUUID": "2446eec3-1420-434a-a687-a4dea3982b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not create an account for the application without password",
              "fullTitle": "Authenthication should not create an account for the application without password",
              "timedOut": null,
              "duration": 6500,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.signUpWithoutPassword('ellen@mail.com'); // attempts to create an account without a password\n\ncy.get(_auth.default.invalidCredError).should('have.text', \"Password can't be blank\"); // asserts that the user is prompted with an error message",
              "err": {},
              "uuid": "911bede9-d137-4bac-aa97-bd3b26e41c1b",
              "parentUUID": "2446eec3-1420-434a-a687-a4dea3982b61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not login without password",
              "fullTitle": "Authenthication should not login without password",
              "timedOut": null,
              "duration": 7677,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.loginWithoutPassword(\"pain@mail.com\"); // attempts to login without password\n\ncy.get(_auth.default.invalidCredError).should('have.text', \"Password can't be blank\"); // asserts that the user is prompted with an error message",
              "err": {},
              "uuid": "6659f48d-4696-4379-bedd-26337c2c4172",
              "parentUUID": "2446eec3-1420-434a-a687-a4dea3982b61",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "760f4358-882e-4a99-b18b-b83e4bc7ec4f",
            "116ca7d7-ba8c-475f-8905-ef7a96a2f99f",
            "b599a9fd-5d4b-4a30-b0dc-af912cee7ece",
            "ab73d61c-dca9-45b5-81fc-49f9068f00cb",
            "911bede9-d137-4bac-aa97-bd3b26e41c1b",
            "6659f48d-4696-4379-bedd-26337c2c4172"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54885,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "27b721ef-ead0-4cd4-b9a0-b1710165f591",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\cart.cy.js",
      "file": "cypress\\e2e\\spec\\cart.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "82ea80e1-0caf-41bd-853b-bfb1d052cd65",
          "title": "Cart interactions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should increase item quantity",
              "fullTitle": "Cart interactions should increase item quantity",
              "timedOut": null,
              "duration": 43200,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_products.default.addOneItemToCart();\ncy.wait(6000);\ncy.get(_cart.default.itemAmount).should('have.text', '1');\n_cart.default.increaseItemQuantity();\ncy.wait(6000);\ncy.get(_cart.default.itemAmount).should('have.text', '2');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.snipcart__font--secondary.snipcart__font--regular`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.snipcart__font--secondary.snipcart__font--regular`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/spec/cart.cy.js:13:32)",
                "diff": null
              },
              "uuid": "f1d2077a-d52a-4a81-a2a7-20befb9e7ff7",
              "parentUUID": "82ea80e1-0caf-41bd-853b-bfb1d052cd65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should decrease item quantity",
              "fullTitle": "Cart interactions should decrease item quantity",
              "timedOut": null,
              "duration": 19483,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_products.default.addItemToCartTwice();\ncy.wait(6000);\ncy.get(_cart.default.itemAmount).should('have.text', '2');\n_cart.default.decreaseItemQuantity();\ncy.wait(6000);\ncy.get(_cart.default.itemAmount).should('have.text', '1');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.snipcart__font--secondary.snipcart__font--regular`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.snipcart__font--secondary.snipcart__font--regular`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/spec/cart.cy.js:21:32)",
                "diff": null
              },
              "uuid": "cb561d51-ac27-4cce-857c-07069af243b4",
              "parentUUID": "82ea80e1-0caf-41bd-853b-bfb1d052cd65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete item from cart",
              "fullTitle": "Cart interactions should delete item from cart",
              "timedOut": null,
              "duration": 13548,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_products.default.addOneItemToCart();\ncy.get(_cart.default.itemAmount).should('have.text', '1');\n_cart.default.deleteItemFromCart();\ncy.wait(6000);\ncy.get(_cart.default.cartItem).should('not.exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.snipcart__font--secondary.snipcart__font--regular`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.snipcart__font--secondary.snipcart__font--regular`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/spec/cart.cy.js:28:32)",
                "diff": null
              },
              "uuid": "5a709d05-20b5-4e51-940f-5c80758054f6",
              "parentUUID": "82ea80e1-0caf-41bd-853b-bfb1d052cd65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f1d2077a-d52a-4a81-a2a7-20befb9e7ff7",
            "cb561d51-ac27-4cce-857c-07069af243b4",
            "5a709d05-20b5-4e51-940f-5c80758054f6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 76231,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b0759ed4-e4e2-4616-bddb-78fcb411f01a",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\checkout.cy.js",
      "file": "cypress\\e2e\\spec\\checkout.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c977e243-84c7-4beb-840e-e25642201134",
          "title": "Checkout products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should checkout one product",
              "fullTitle": "Checkout products should checkout one product",
              "timedOut": null,
              "duration": 37432,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_products.default.addOneItemToCart();\ncy.wait(3000);\n_checkout.default.checkoutProduct(\"Mia Miller\", \"mm@mail.com\", \"34 Daisy Street\", \"1\", \"Raleigh\", \"Jamaica\", \"Kingston\", \"27607\");\ncy.wait(2000);\n_checkout.default.continuetoPaymentBtn.click({\n  force: true\n});\ncy.wait(4000);\n_checkout.default.payment();\ncy.get(_checkout.default.successMessage).should('have.text', 'Thank you for your order');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.snipcart-base-button__wrapper`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.snipcart-base-button__wrapper`, but never found it.\n    at Checkout.checkoutProduct (webpack:///./cypress/e2e/page/checkout.js:54:7)\n    at Context.eval (webpack:///./cypress/e2e/spec/checkout.cy.js:14:17)",
                "diff": null
              },
              "uuid": "125534c5-f45b-42a4-a763-2087f91facc1",
              "parentUUID": "c977e243-84c7-4beb-840e-e25642201134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should checkout multiple products",
              "fullTitle": "Checkout products should checkout multiple products",
              "timedOut": null,
              "duration": 47425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_products.default.addMultipleItemsToCart();\ncy.wait(3000);\n_checkout.default.checkoutProduct(\"Mia Miller\", \"mm@mail.com\", \"34 Daisy Street\", \"1\", \"Raleigh\", \"Jamaica\", \"Kingston\", \"27607\");\ncy.wait(2000);\n_checkout.default.continuetoPaymentBtn.click({\n  force: true\n});\ncy.wait(4000);\n_checkout.default.payment();\ncy.get(_checkout.default.successMessage).should('have.text', 'Thank you for your order');",
              "err": {
                "message": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > snipcart_error_operation_failed\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > snipcart_error_operation_failed\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > snipcart_error_operation_failed\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "diff": null
              },
              "uuid": "66f96290-5db8-44d8-be4f-448728a9b787",
              "parentUUID": "c977e243-84c7-4beb-840e-e25642201134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not checkout without email address",
              "fullTitle": "Checkout products should not checkout without email address",
              "timedOut": null,
              "duration": 34987,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_products.default.addOneItemToCart();\n_checkout.default.checkoutProductWithoutEmail(\"Lois King\", \"33 Free Lane\", '4', \"Portmore\", \"Jamaica\", \"St. Catherine\", \"34552\");\n_checkout.default.continuetoPaymentBtn.click({\n  force: true\n});\ncy.wait(6000);\ncy.get(_checkout.default.emailError).should('have.text', 'This field is required'); //cy.get(checkout.billingTitle).should('have.text','Billing')",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected { Object (0, length) } to have text 'This field is required', but the text was ''",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected { Object (0, length) } to have text 'This field is required', but the text was ''\n    at Context.eval (webpack:///./cypress/e2e/spec/checkout.cy.js:36:36)",
                "diff": "+ 'This field is required'\n"
              },
              "uuid": "f4c86d8a-8192-467d-adbb-3349c5fd1f73",
              "parentUUID": "c977e243-84c7-4beb-840e-e25642201134",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "125534c5-f45b-42a4-a763-2087f91facc1",
            "66f96290-5db8-44d8-be4f-448728a9b787",
            "f4c86d8a-8192-467d-adbb-3349c5fd1f73"
          ],
          "pending": [],
          "skipped": [],
          "duration": 119844,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "08d143ae-1120-4445-8afb-f72a9cf57b11",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\contact.cy.js",
      "file": "cypress\\e2e\\spec\\contact.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c74a9b2b-b7cb-411e-beb4-78cc4f0a0bd7",
          "title": "Contact Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should verify that the email address is correct",
              "fullTitle": "Contact Page should verify that the email address is correct",
              "timedOut": null,
              "duration": 36048,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(_contactPage.default.emailAddress).should('have.text', 'info@qualityworkscg.com'); // should verify that the email address on the contact page is correct",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected { Object (0, length) } to have text 'info@qualityworkscg.com', but the text was ''",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected { Object (0, length) } to have text 'info@qualityworkscg.com', but the text was ''\n    at Context.eval (webpack:///./cypress/e2e/spec/contact.cy.js:13:37)",
                "diff": "+ 'info@qualityworkscg.com'\n"
              },
              "uuid": "58774a1d-4e80-4de6-8213-1b0af1fc53ee",
              "parentUUID": "c74a9b2b-b7cb-411e-beb4-78cc4f0a0bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should send a message",
              "fullTitle": "Contact Page should send a message",
              "timedOut": null,
              "duration": 28158,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_contactPage.default.sendMessage(\"Ky\", \"Levy\", \"kylev@mail.com\", \"Bootcamp\", \"When does it start?\"); // sends  a message \n\ncy.wait(5000);\ncy.get(_contactPage.default.confirmation).should('be.visible'); //checks if the message sent notification is visiblw",
              "err": {
                "message": "TypeError: Timed out retrying after 4000ms: Cannot read properties of undefined (reading 'toLowerCase')",
                "estack": "TypeError: Timed out retrying after 4000ms: Cannot read properties of undefined (reading 'toLowerCase')\n    at Object.short (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:170026:34)\n    at Function.result (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:41305:44)\n    at switchCase (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:169978:58)\n    at stringify (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:170049:10)\n    at Object.getReasonIsHidden (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:171726:16)\n    at Object.onError (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:134254:81)\n    at assert (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:155962:24)\n    at Assertion.<anonymous> (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:156040:14)\n    at Assertion.propertyGetter (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:81950:29)\n    at Object.proxyGetter [as get] (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:83388:22)\n    at applyChainer (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:138806:27)\n    at <unknown> (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:138867:16)\n    at arrayReduce (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:28294:21)\n    at Function.reduce (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:37346:14)\n    at applyChainers (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:138844:68)\n    at tryCatcher (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:11327:23)\n    at Promise.attempt.Promise.try (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:8601:29)\n    at Context.shouldFn (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:138873:63)\n    at Context.should (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:138892:23)\n    at <unknown> (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:133878:39)\n    at assertions (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:134142:16)\n    at tryCatcher (https://ui-automation-camp.vercel.app/__cypress/runner/cypress_runner.js:11327:23)",
                "diff": null
              },
              "uuid": "e00a3663-cfb8-40aa-a7bb-6f89aac34b41",
              "parentUUID": "c74a9b2b-b7cb-411e-beb4-78cc4f0a0bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not send a message without email",
              "fullTitle": "Contact Page should not send a message without email",
              "timedOut": null,
              "duration": 30482,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_contactPage.default.sendMessageWithoutEmail(\"Ky\", \"Levy\", \"Bootcamp\", \"When does it start?\"); // should try to send a message without an email address\n\ncy.wait(5000);\ncy.get(_contactPage.default.emailField).should('have.text', 'Field is required!'); //should check if an error message is displayed",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input#email.chakra-input.css-1kp110w>' to have text 'Field is required!', but the text was ''",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input#email.chakra-input.css-1kp110w>' to have text 'Field is required!', but the text was ''\n    at Context.eval (webpack:///./cypress/e2e/spec/contact.cy.js:23:35)",
                "diff": "+ 'Field is required!'\n"
              },
              "uuid": "3dc22364-68c1-4dd4-a9e3-7bf02c409132",
              "parentUUID": "c74a9b2b-b7cb-411e-beb4-78cc4f0a0bd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "58774a1d-4e80-4de6-8213-1b0af1fc53ee",
            "e00a3663-cfb8-40aa-a7bb-6f89aac34b41",
            "3dc22364-68c1-4dd4-a9e3-7bf02c409132"
          ],
          "pending": [],
          "skipped": [],
          "duration": 94688,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "baf40b60-01d1-4cd9-8ac8-a78fac107dbd",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\filter-and-sort.cy.js",
      "file": "cypress\\e2e\\spec\\filter-and-sort.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "171b0831-4a9b-4199-9475-3fe01509dc9b",
          "title": "Filter and sort products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sort from A to Z",
              "fullTitle": "Filter and sort products should sort from A to Z",
              "timedOut": null,
              "duration": 31470,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.sortSelect).select('aToZ'); // const qualityProducts = ['Quality Stylish Shoes','Dell Laptop','Gray Couch','HP Laptop','Mackbook Pro','Quality Blue Shoes','Quality Cargo Pants','Quality Fitted Hat',\n// 'Quality Heal Shoes','Quality Hooded Sweatshirt','Quality Jeans Pants','Quality Kids Tshirt','Quality Trucker Hat','Quality Mousepad','Quality Mug','Quality Pillow',\n// 'Quality Pink Pants','Red Couch','Quality Sweatshirt','Quality Tshirt','Quality Vneck','White Couch']\n// qualityProducts.sort()\n_items.default.products.sort();\ncy.wait(5000);\ncy.get(_sort.default.productNames).each(($elem, index) => {\n  //expect($elem.text()).equal(qualityProducts[index])\n  expect($elem.text()).equal(_items.default.products[index].name); //checks the records data/items.js file are equal to the results returned after sorting from A to Z\n});",
              "err": {},
              "uuid": "f476a4fd-4b93-4198-abbe-65b64d2ad972",
              "parentUUID": "171b0831-4a9b-4199-9475-3fe01509dc9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort from Z to A",
              "fullTitle": "Filter and sort products should sort from Z to A",
              "timedOut": null,
              "duration": 17880,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.sortSelect).select('zToA');\nconst qualityProducts = ['Dell Laptop', 'Gray Couch', 'HP Laptop', 'Mackbook Pro', 'Quality Blue Shoes', 'Quality Cargo Pants', 'Quality Fitted Hat', 'Quality Heal Shoes', 'Quality Hooded Sweatshirt', 'Quality Jeans Pants', 'Quality Kids Tshirt', 'Quality Mousepad', 'Quality Mug', 'Quality Pillow', 'Quality Pink Pants', 'Quality Stylish Shoes', 'Quality Sweatshirt', 'Quality Trucker Hat', 'Quality Tshirt', 'Quality Vneck', 'Red Couch', 'White Couch'];\nqualityProducts.sort().reverse();\ncy.wait(5000);\ncy.get(_sort.default.productNames).each(($elem, index) => {\n  expect($elem.text()).equal(qualityProducts[index]);\n});",
              "err": {},
              "uuid": "7b2a1f96-034d-45b2-9a4b-bebba7041cfc",
              "parentUUID": "171b0831-4a9b-4199-9475-3fe01509dc9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should filter by category",
              "fullTitle": "Filter and sort products should filter by category",
              "timedOut": null,
              "duration": 18610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.categorySelect).select('laptop'); // selects the laptop option in the category field\n//const laptops = [\"Mackbook Pro\",\"Dell Laptop\",\"HP Laptop\"]\ncy.wait(5000);\ncy.get(_sort.default.productNames).each(($elem, index) => {\n  //expect($elem.text()).equal(laptops[index])\n  expect($elem.text()).equal(_results.default.laptops[index].name);\n});",
              "err": {},
              "uuid": "e136c597-e769-401e-b714-42cbff4e1017",
              "parentUUID": "171b0831-4a9b-4199-9475-3fe01509dc9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f476a4fd-4b93-4198-abbe-65b64d2ad972",
            "7b2a1f96-034d-45b2-9a4b-bebba7041cfc",
            "e136c597-e769-401e-b714-42cbff4e1017"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 67960,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3685d357-4dea-4b1c-a802-d67f74e6a435",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\prods-gallery.cy.js",
      "file": "cypress\\e2e\\spec\\prods-gallery.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2a56f1b-5b89-4768-a9ef-e392f14c7497",
          "title": "Cart interactions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify content on the homepage",
              "fullTitle": "Cart interactions verify content on the homepage",
              "timedOut": null,
              "duration": 50526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_homePage.default.pageHeaderTitle).should('have.text', 'Automation Camp Store');\ncy.get(_homePage.default.signOutBtn).should('have.text', 'Sign Out');\ncy.get(_homePage.default.productsTitle).should('have.text', 'Products');",
              "err": {},
              "uuid": "2f580e76-ff4f-4d28-9a21-a095827ca1a3",
              "parentUUID": "c2a56f1b-5b89-4768-a9ef-e392f14c7497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should verify that the iframe has loaded",
              "fullTitle": "Cart interactions should verify that the iframe has loaded",
              "timedOut": null,
              "duration": 25140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_homePage.default.youTubeVideo).should('be.visible'); // verifies that the YouTube video is visible on the page\ncy.frameLoaded(_homePage.default.iFrame, {\n  url: 'https://www.youtube.com/embed/JSda4u5jFFk'\n}); //verifies that the YouTube video in the iframe has loaded with the specified url",
              "err": {},
              "uuid": "ef6be24c-22d2-475a-bfad-d0987a7148b3",
              "parentUUID": "c2a56f1b-5b89-4768-a9ef-e392f14c7497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should verify that the page can be reset after category selection",
              "fullTitle": "Cart interactions should verify that the page can be reset after category selection",
              "timedOut": null,
              "duration": 13677,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.categorySelect).select('laptop'); // selects the laptop option in the category field\ncy.get(_homePage.default.mackBookProTitle).should('have.text', 'Mackbook Pro'); //verifies that a laptop product has been returned\ncy.get(_homePage.default.resetBtn).click(); // resets the filtering that was done\ncy.get(_homePage.default.fittedHatTitle).should('have.text', 'Quality Fitted Hat'); // verifies that the reset was succesful",
              "err": {},
              "uuid": "4dbe92fb-e5aa-49c9-ad07-7d7092520992",
              "parentUUID": "c2a56f1b-5b89-4768-a9ef-e392f14c7497",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f580e76-ff4f-4d28-9a21-a095827ca1a3",
            "ef6be24c-22d2-475a-bfad-d0987a7148b3",
            "4dbe92fb-e5aa-49c9-ad07-7d7092520992"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 89343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f881c658-05ff-4c49-b58a-71326ff50e0c",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\product-details.cy.js",
      "file": "cypress\\e2e\\spec\\product-details.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "51c276dc-41e9-4c9b-a2aa-9c9addeea464",
          "title": "Product details",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should verify the Quality Mug price",
              "fullTitle": "Product details should verify the Quality Mug price",
              "timedOut": null,
              "duration": 52093,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.get(prodDetails.mugTitle).should('have.text','Quality Mug')\ncy.get(_prodDetails.default.mugPrice).should('have.text', 'Price : $15');",
              "err": {},
              "uuid": "73151682-09a8-406f-9f3c-85d3459012ad",
              "parentUUID": "51c276dc-41e9-4c9b-a2aa-9c9addeea464",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should verify that the product has the correct category",
              "fullTitle": "Product details should verify that the product has the correct category",
              "timedOut": null,
              "duration": 20879,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_prodDetails.default.category).should('have.text', 'cup');",
              "err": {},
              "uuid": "340ee9d0-7992-466f-aa9b-d2a8c79fd0f6",
              "parentUUID": "51c276dc-41e9-4c9b-a2aa-9c9addeea464",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return to the products page",
              "fullTitle": "Product details should return to the products page",
              "timedOut": null,
              "duration": 22283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_prodDetails.default.goBacktoProducts();\ncy.url().should('eq', 'https://ui-automation-camp.vercel.app/products');",
              "err": {},
              "uuid": "30ed5110-d3f8-4a3c-9bd3-a51c69bfa0e9",
              "parentUUID": "51c276dc-41e9-4c9b-a2aa-9c9addeea464",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73151682-09a8-406f-9f3c-85d3459012ad",
            "340ee9d0-7992-466f-aa9b-d2a8c79fd0f6",
            "30ed5110-d3f8-4a3c-9bd3-a51c69bfa0e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 95255,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dc24efc1-611c-43a6-a8df-5dd9bd004d64",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\search.cy.js",
      "file": "cypress\\e2e\\spec\\search.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed6e0453-8f3b-4aa0-a38c-b0341190a264",
          "title": "Search for products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should search for an item which returns one result",
              "fullTitle": "Search for products should search for an item which returns one result",
              "timedOut": null,
              "duration": 34230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.searchOpt).type('mug'); //should search for a product with mug in the name\ncy.get(_sort.default.productNames).should('have.text', 'Quality Mug'); // should verify that the result was Quality Mug",
              "err": {},
              "uuid": "4128f7a1-a756-42fe-bce6-ba199c276784",
              "parentUUID": "ed6e0453-8f3b-4aa0-a38c-b0341190a264",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should search for an item which returns multiple results",
              "fullTitle": "Search for products should search for an item which returns multiple results",
              "timedOut": null,
              "duration": 19232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.searchOpt).type('shoes'); //should search for a product with shoes in the name\nconst shoes = ['Quality Blue Shoes', 'Quality Stylish Shoes', 'Quality Heal Shoes']; // creates an array of the expected results\n//verifies that the results are as expected\ncy.get(_sort.default.productNames).each(($elem, index) => {\n  expect($elem.text()).equal(shoes[index]);\n});",
              "err": {},
              "uuid": "9946ccdc-ab5d-49cf-890b-c34621f77265",
              "parentUUID": "ed6e0453-8f3b-4aa0-a38c-b0341190a264",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return products when partial word is searched",
              "fullTitle": "Search for products should return products when partial word is searched",
              "timedOut": null,
              "duration": 15568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.searchOpt).type('ed');\nconst results = ['Quality Fitted Hat', 'Quality Hooded Sweatshirt', 'Red Couch']; // creates an array of the expected results\n//verifies that the results are as expected\ncy.get(_sort.default.productNames).each(($elem, index) => {\n  expect($elem.text()).equal(results[index]);\n});",
              "err": {},
              "uuid": "79b6ff5e-bc0d-45ee-ae1d-7b0c2aefc77b",
              "parentUUID": "ed6e0453-8f3b-4aa0-a38c-b0341190a264",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4128f7a1-a756-42fe-bce6-ba199c276784",
            "9946ccdc-ab5d-49cf-890b-c34621f77265",
            "79b6ff5e-bc0d-45ee-ae1d-7b0c2aefc77b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69030,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "719c0bac-74a3-486b-b61d-bac524bb5340",
      "title": "",
      "fullFile": "cypress\\e2e\\spec\\add-to-cart.cy.js",
      "file": "cypress\\e2e\\spec\\add-to-cart.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f2e101e1-bd30-4e8d-a74e-c94a529eb3d8",
          "title": "Add items to cart",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add one item to cart",
              "fullTitle": "Add items to cart should add one item to cart",
              "timedOut": null,
              "duration": 40214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_products.default.addOneItemToCart(); // adds a single item to the cart\n\ncy.wait(6000);\ncy.get('#top-cart').should('have.text', '$30.00'); // asserts that the cart total is $30 after the item has been added\ncy.wait(6000);\ncy.get(_products.default.cartSummary).should('be.visible'); //asserts that the cart Summary popup is visible after item is added to cart",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<button#top-cart.chakra-button.snipcart-checkout.css-186fne3>' to have text '$30.00', but the text was '$0.00'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<button#top-cart.chakra-button.snipcart-checkout.css-186fne3>' to have text '$30.00', but the text was '$0.00'\n    at Context.eval (webpack:///./cypress/e2e/spec/add-to-cart.cy.js:13:28)",
                "diff": "- '$0.00'\n+ '$30.00'\n"
              },
              "uuid": "191e66e6-ac41-4124-9121-2503fa2e4320",
              "parentUUID": "f2e101e1-bd30-4e8d-a74e-c94a529eb3d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add multiple items to cart",
              "fullTitle": "Add items to cart should add multiple items to cart",
              "timedOut": null,
              "duration": 21857,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_products.default.addMultipleItemsToCart(); // adds multiple items to the cart\n\ncy.wait(6000);\ncy.get('#top-cart').should('have.text', '$54.00');\ncy.wait(6000);\ncy.get(_products.default.cartSummary).should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<button#top-cart.chakra-button.snipcart-checkout.css-186fne3>' to have text '$54.00', but the text was '$24.00'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<button#top-cart.chakra-button.snipcart-checkout.css-186fne3>' to have text '$54.00', but the text was '$24.00'\n    at Context.eval (webpack:///./cypress/e2e/spec/add-to-cart.cy.js:20:28)",
                "diff": "- '$24.00'\n+ '$54.00'\n"
              },
              "uuid": "9b1dc8fc-fa33-4d64-bfa8-132ca5831f1c",
              "parentUUID": "f2e101e1-bd30-4e8d-a74e-c94a529eb3d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add an item to cart after searching",
              "fullTitle": "Add items to cart should add an item to cart after searching",
              "timedOut": null,
              "duration": 25385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_products.default.addtoCartAfterSearch(\"Trucker\"); //inserts trucker into the search field and adds the item to the cart\n\ncy.wait(6000);\ncy.get('#top-cart').should('have.text', '$24.00');\ncy.wait(6000);\ncy.get(_products.default.cartSummary).should('be.visible');",
              "err": {},
              "uuid": "49c41df7-e574-4f61-85f6-1f210a3309e4",
              "parentUUID": "f2e101e1-bd30-4e8d-a74e-c94a529eb3d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add an item to cart after sorting",
              "fullTitle": "Add items to cart should add an item to cart after sorting",
              "timedOut": null,
              "duration": 26440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.sortSelect).select('aToZ'); //selects the A to Z option in the sort option\ncy.wait(6000); //waits for the page to load so that an item can be selected\n_products.default.addtoCartAfterSort(); //adds an item to the cart after the products are sorted\n\ncy.wait(6000);\ncy.get('#top-cart').should('have.text', '$1000.00');\ncy.get(_products.default.cartSummary).should('be.visible');",
              "err": {},
              "uuid": "57bfa8b1-5834-4f80-8b29-305af3bb670b",
              "parentUUID": "f2e101e1-bd30-4e8d-a74e-c94a529eb3d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add an item to cart after category selection",
              "fullTitle": "Add items to cart should add an item to cart after category selection",
              "timedOut": null,
              "duration": 24176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_products.default.categorySelect).select('hat'); // selects the hat option in the category field\ncy.wait(6000);\n_products.default.addtoCartAfterCategorySelect(); // adds an item to the cart after the category is selected\n\ncy.wait(6000);\ncy.get('#top-cart').should('have.text', '$30.00');\ncy.get(_products.default.cartSummary).should('be.visible');",
              "err": {},
              "uuid": "d6b6111c-da30-4ddb-96a2-fe3ba09061f0",
              "parentUUID": "f2e101e1-bd30-4e8d-a74e-c94a529eb3d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49c41df7-e574-4f61-85f6-1f210a3309e4",
            "57bfa8b1-5834-4f80-8b29-305af3bb670b",
            "d6b6111c-da30-4ddb-96a2-fe3ba09061f0"
          ],
          "failures": [
            "191e66e6-ac41-4124-9121-2503fa2e4320",
            "9b1dc8fc-fa33-4d64-bfa8-132ca5831f1c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 138072,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}